name: ie-bank-infra

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE_GROUP_DEV: aguadamillas_students_1
  RESOURCE_GROUP_UAT: aguadamillas_students_1
  RESOURCE_GROUP_PROD: aguadamillas_students_2
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  SUBSCRIPTION_ID_UAT: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  SUBSCRIPTION_ID_PROD: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: grp4

jobs:
  build:
    permissions:
      id-token: write
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    env:
      LOCATION: 'UKSouth'
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: 'Azure CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Bicep linter for key-vault
        run: az bicep build --file ./key-vault.bicep

      - name: Bicep Validate for key-vault
        run: |
            az deployment sub validate \
              --name validate-${{ github.run_id }} \
              --template-file ./key-vault.bicep \
              --location ${{ env.LOCATION }}

      - name: Run Bicep linter for main
        run: az bicep build --file ./main.bicep

      - name: Bicep Validate for main
        run: |
          az deployment sub validate \
            --name validate-${{ github.run_id }} \
            --template-file ./main.bicep \
            --location ${{ env.LOCATION }}

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with: 
          framework: bicep
      
      - name: debugger
        run: ls

      - name: Upload SARIF file
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: checkov

  deploy-dev:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
    env:
      ENV: dev
      DBHOST: grp4-dbsrv-dev.postgres.database.azure.com
      DBNAME: grp4-db-dev
      DBUSER: 'iebankdbadmin'
      DBPASS: 'IE.Bank.DB.Admin.Pa$$'
      FLASK_APP: app.py
      FLASK_DEBUG: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Key Vault
        uses: azure/arm-deploy@v1.0.9
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./key-vault.bicep
          parameters: ./kv-parameters.json
          deploymentName: "${{ env.USER_ALIAS }}-kv-dev"
          failOnStdErr: false

      - name: Deploy Bicep file
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./main.bicep
          parameters: ./parameters/dev.parameters.json appServiceAPIEnvVarENV=${{ env.ENV }} appServiceAPIEnvVarDBHOST=${{ env.DBHOST }} appServiceAPIEnvVarDBNAME=${{ env.DBNAME }} appServiceAPIEnvVarDBPASS=${{ env.DBPASS }} appServiceAPIDBHostDBUSER=${{ env.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ env.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ env.FLASK_DEBUG }}
          deploymentName: ${{ env.USER_ALIAS }}

  deploy-uat:
    if: github.event.pull_request.base.ref == 'main' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'User Acceptance Testing'
    env:
      ENV: uat
      DBHOST: grp4-dbsrv-uat.postgres.database.azure.com
      DBNAME: grp4-db-uat
      DBUSER: 'iebankdbadmin'
      DBPASS: 'IE.Bank.DB.Admin.Pa$$'
      FLASK_APP: app.py
      FLASK_DEBUG: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Key Vault
        uses: azure/arm-deploy@v1.0.9
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_UAT }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
          template: ./key-vault.bicep
          parameters: ./kv-params-uat.json
          deploymentName: "${{ env.USER_ALIAS }}-kv-uat"
          failOnStdErr: false

      - name: Deploy Bicep file
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_UAT }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
          template: ./main.bicep
          parameters: ./parameters/uat.json appServiceAPIEnvVarENV=${{ env.ENV }} appServiceAPIEnvVarDBHOST=${{ env.DBHOST }} appServiceAPIEnvVarDBNAME=${{ env.DBNAME }} appServiceAPIEnvVarDBPASS=${{ env.DBPASS }} appServiceAPIDBHostDBUSER=${{ env.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ env.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ env.FLASK_DEBUG }}
          deploymentName: ${{ env.USER_ALIAS }}

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    env:
      ENV: prod
      DBHOST: grp4-dbsrv-uat.postgres.database.azure.com
      DBNAME: grp4-db-uat
      DBUSER: 'iebankdbadmin'
      DBPASS: 'IE.Bank.DB.Admin.Pa$$'
      FLASK_APP: app.py
      FLASK_DEBUG: 1
  
    steps:
      - name: Checkout code
        uses: actions/checkout@main
  
      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      - name: Deploy Key Vault
        uses: azure/arm-deploy@v1.0.9
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_PROD }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_PROD }}
          template: ./key-vault.bicep
          parameters: ./kv-params-prod.json
          deploymentName: "${{ env.USER_ALIAS }}-kv-prod"
          failOnStdErr: false
  
      - name: Deploy Bicep file
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_PROD }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_PROD }}
          template: ./main.bicep
          parameters: ./parameters/prod.json appServiceAPIEnvVarENV=${{ env.ENV }} appServiceAPIEnvVarDBHOST=${{ env.DBHOST }} appServiceAPIEnvVarDBNAME=${{ env.DBNAME }} appServiceAPIEnvVarDBPASS=${{ env.DBPASS }} appServiceAPIDBHostDBUSER=${{ env.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ env.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ env.FLASK_DEBUG }}
          deploymentName: ${{ env.USER_ALIAS }}